generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id          String     @id @default(uuid())
  shopDomain  String     @unique
  accessToken String
  createdAt   DateTime   @default(now())

  customers   Customer[]
  products    Product[]
  orders      Order[]
}

model Customer {
  id         String   @id @default(uuid())
  shopifyId  BigInt
  tenantId   String
  email      String?
  firstName  String?
  lastName   String?
  createdAt  DateTime @default(now())

  tenant     Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  orders     Order[]

  @@unique([tenantId, shopifyId])
}

model Product {
  id         String   @id @default(uuid())
  shopifyId  BigInt
  tenantId   String
  title      String
  price      Decimal  @db.Decimal(12, 2)
  createdAt  DateTime @default(now())

  tenant     Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@unique([tenantId, shopifyId])
}

model Order {
  id                 String   @id @default(uuid())
  shopifyId          BigInt
  tenantId           String
  customerShopifyId  BigInt?
  totalPrice         Decimal  @db.Decimal(12, 2)
  createdAt          DateTime @default(now())

  tenant             Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade)
  customer           Customer? @relation(fields: [tenantId, customerShopifyId], references: [tenantId, shopifyId])

  @@unique([tenantId, shopifyId])
  @@index([tenantId, createdAt])
  @@index([tenantId, customerShopifyId])
}

